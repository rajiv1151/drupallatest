<?php

/**
 * @file
 * Install, update and uninstall functions for the employee module.
 */
use Drupal\Core\Database\Database;
/**
 * Implements hook_install().
 */
function employee_install() {
  \Drupal::messenger()->addStatus(__FUNCTION__);
}

/**
 * Implements hook_uninstall().
 */
function employee_uninstall() {
  \Drupal::messenger()->addStatus(__FUNCTION__);
}

/**
 * Implements hook_schema().
 */
function employee_schema() {
  $schema['employee'] = [
    'description' => 'Table description.',
    'fields' => [
      'id' => [
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique record ID.',
      ],
      'status' => [
        'description' => 'Boolean indicating whether this record is active.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
      ],
      'emp_firstname' => [
        'type' => 'varchar_ascii',
        'length' => 30,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Employee first name.',
      ],
      'emp_lastname' => [
        'type' => 'varchar_ascii',
        'length' => 30,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Employee last name.',
      ],
      'emp_email' => [
        'type' => 'varchar_ascii',
        'length' => 100,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Employee email address.',
      ],
      'emp_zipcode' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Employee zipcode.',
      ],
      'new_column1' => [
        'type' => 'int',
        'size' => 'tiny',
      ],
      'new_column2' => [
        'type' => 'int',
      ],
    ],
    'primary key' => ['id'],
    'indexes' => [
      'status' => ['status'],
    ],
  ];

  return $schema;
}

/**
 * Implements hook_requirements().
 */
function employee_requirements($phase) {
  $requirements = [];

  if ($phase == 'runtime') {
    $value = mt_rand(0, 100);
    $requirements['employee_status'] = [
      'title' => t('employee status'),
      'value' => t('employee value: @value', ['@value' => $value]),
      'severity' => $value > 50 ? REQUIREMENT_INFO : REQUIREMENT_WARNING,
    ];
  }

  return $requirements;
}
/**
 * Add new field(accept) to 'employee' table.
 */
 
 function employee_update_9000(){//working
	$spec = [
    'type' => 'int',
    'description' => "Boolean indicating whether conditions accepted.",
    'default' => 0,
    'not null' => TRUE,
  ]; 
 $schema = Database::getConnection()->schema();
 $schema->addField('employee', 'accept', $spec);
 }

 /**
 * Add new fields('myfield1, myfield2') to 'employee' table.
 */
function employee_update_9006() {
  $fields = [
    'myfield1' => [
        'description' => 'employee myfield1',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ],
      'myfield2' => [
        'description' => 'employee myfield2',
        'type' => 'text',
        'not null' => TRUE,
      ],
    ];
    // Get the connection and the database schema.
  $schema = \Drupal::service('database')->schema();
  $table = 'employee';
    if ($schema->tableExists('employee')) {	
      foreach($fields as $key => $val){
        if ($schema->fieldExists($table, $key)) {
          $schema->dropField($table, $key);
          \Drupal::logger('employee')->notice('Field'. $key.'existing  deleted.');
        }
        $schema->addField($table, $key, $val);
        \Drupal::logger('employee')->notice('Field'. $key.'newly added.');
      }        
    } 
  }

/**
 * Delete column to existing table (' myfield2') to 'employee' table.
 */  
//
function employee_update_9005(){
    $schema = \Drupal::service('database')->schema();
    if ($schema->fieldExists('employee', 'myfield2')) {
      $schema->dropField('employee', 'myfield2');
    // Set a new message.
    \Drupal::logger('employee')->notice('Field Extra deleted.');
    }
  }

